{"ast":null,"code":"var _jsxFileName = \"/home/slobodan/Documents/React-PhoneBook/phonebook-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addContact = () => {\n      const newContact = {\n        name: this.state.name,\n        number: this.state.number\n      };\n\n      if (this.state.name === \"\" || this.state.number === \"\") {\n        alert(\"Both fields are required.\");\n        return;\n      }\n\n      const allContacts = this.state.contacts.concat(newContact);\n      this.setState({\n        contacts: allContacts,\n        name: \"\",\n        number: \"\"\n      });\n      localStorage.setItem(\"contacts\", JSON.stringify(allContacts));\n    };\n\n    this.state = {\n      name: \"\",\n      number: \"\",\n      contacts: []\n    };\n  }\n\n  /*   deleteItem = (index) => {\n    const nextContacts = this.state.contacts.splice(index, 1);\n    localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    this.setState({ contact: nextContacts });\n  };\n  */\n  deleteItem(index) {\n    this.state.contacts.splice(index, 1);\n    this.setState({\n      contacts: this.state.contacts\n    });\n  }\n  /*   deleteItem = (index) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (item, itemIndex) => itemIndex != index\n      ),\n    }));\n  }; */\n\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n\n    if (contacts === null) {\n      return contacts;\n    }\n  }\n\n  loadLocalStorage() {\n    for (let key in this.state) {\n      if (localStorage.hasOwnProperty(key)) {\n        let value = localStorage.getItem(key);\n\n        try {\n          value = JSON.parse(value);\n          this.setState({\n            [key]: value\n          });\n        } catch (e) {\n          this.setState({\n            [key]: value\n          });\n        }\n      }\n    }\n  }\n\n  saveToLocalStorage() {\n    for (let key in this.state) {\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  render() {\n    const form = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      value: this.state.name,\n      placeholder: \"Enter your full name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"tel\",\n      className: \"form-control\",\n      onChange: e => this.setState({\n        number: e.target.value\n      }),\n      value: this.state.number,\n      placeholder: \"Enter your phone number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-add-contact mt-1 mb-3\",\n      onClick: this.addContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Add new contact\"), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"add-contact-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"React PhoneBook:\"), form, this.state.contacts.map((contact, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, contact.name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-italic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, contact.number)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-delete\",\n      onClick: () => this.deleteItem(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 16 16\",\n      className: \"bi bi-trash\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/slobodan/Documents/React-PhoneBook/phonebook-app/src/App.js"],"names":["React","Component","App","constructor","props","addContact","newContact","name","state","number","alert","allContacts","contacts","concat","setState","localStorage","setItem","JSON","stringify","deleteItem","index","splice","componentDidMount","getItem","loadLocalStorage","key","hasOwnProperty","value","parse","e","saveToLocalStorage","render","form","target","map","contact"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      number: \"\",\n      contacts: [],\n    };\n  }\n\n  addContact = () => {\n    const newContact = {\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    if (this.state.name === \"\" || this.state.number === \"\") {\n      alert(\"Both fields are required.\");\n      return;\n    }\n    const allContacts = this.state.contacts.concat(newContact);\n\n    this.setState({\n      contacts: allContacts,\n      name: \"\",\n      number: \"\",\n    });\n\n    localStorage.setItem(\"contacts\", JSON.stringify(allContacts));\n  };\n\n  /*   deleteItem = (index) => {\n    const nextContacts = this.state.contacts.splice(index, 1);\n    localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    this.setState({ contact: nextContacts });\n  };\n */\n  deleteItem(index) {\n    this.state.contacts.splice(index, 1);\n    this.setState({ contacts: this.state.contacts });\n  }\n\n  /*   deleteItem = (index) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (item, itemIndex) => itemIndex != index\n      ),\n    }));\n  }; */\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n\n    if (contacts === null) {\n      return contacts;\n    }\n  }\n\n  loadLocalStorage() {\n    for (let key in this.state) {\n      if (localStorage.hasOwnProperty(key)) {\n        let value = localStorage.getItem(key);\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  }\n\n  saveToLocalStorage() {\n    for (let key in this.state) {\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  render() {\n    const form = (\n      <div className=\"container\">\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            onChange={(e) => this.setState({ name: e.target.value })}\n            value={this.state.name}\n            placeholder=\"Enter your full name\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"tel\"\n            className=\"form-control\"\n            onChange={(e) => this.setState({ number: e.target.value })}\n            value={this.state.number}\n            placeholder=\"Enter your phone number\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-add-contact mt-1 mb-3\"\n          onClick={this.addContact}\n        >\n          Add new contact\n        </button>\n        <hr className=\"add-contact-line\" />\n      </div>\n    );\n\n    return (\n      <div className=\"container\">\n        <div className=\"App\">\n          <h1 className=\"header mb-4\">React PhoneBook:</h1>\n\n          {form}\n\n          {this.state.contacts.map((contact, index) => (\n            <div className=\"grid-container\" key={index}>\n              <div>\n                <span className=\"font-weight-bold\">{contact.name}</span>\n                <br />\n                <span className=\"font-italic\">{contact.number}</span>\n              </div>\n              <div>\n                <button\n                  className=\"btn-delete\"\n                  onClick={() => this.deleteItem(index)}\n                >\n                  <svg\n                    width=\"1em\"\n                    height=\"1em\"\n                    viewBox=\"0 0 16 16\"\n                    className=\"bi bi-trash\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n                    />\n                  </svg>\n                </button>\n              </div>\n              <hr />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}